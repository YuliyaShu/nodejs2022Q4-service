// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserPrisma {
  id       String   @id @default(uuid())
  login    String
  password String
  version  Int      @default(1)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
}

model ArtistPrisma {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean @default(false)
  favorites FavoritesPrisma? @relation(fields: [favoritesId], references: [id], onDelete: SetNull)
  favoritesId String?
  Album AlbumPrisma[]
  Track TrackPrisma[]
}

model AlbumPrisma {
  id       String @id @unique @default(uuid())
  name     String
  year     Int
  artistId String?
  favoritesId String?
  favorites FavoritesPrisma? @relation(fields: [favoritesId], references: [id], onDelete: SetNull)
  Artist ArtistPrisma? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  Track TrackPrisma[]
}

model TrackPrisma {
  id       String @id @default(uuid())
  name     String
  duration Int
  artistId String?
  albumId  String?
  favoritesId String?
  Artist ArtistPrisma? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  Album AlbumPrisma? @relation(fields: [albumId], references: [id], onDelete: SetNull)
  favorites FavoritesPrisma? @relation(fields: [favoritesId], references: [id], onDelete: SetNull)
}

model FavoritesPrisma {
  id String @id @default(uuid())
  artists ArtistPrisma[]
  albums AlbumPrisma[]
  tracks TrackPrisma[]
}
